### COLONISATION EFFECTS ###

# used from province scope
colonise = {
	custom_tooltip = { text = colonise_tooltip }

	hidden_tooltip = {
		# unlock province population events (see RIP.11700)
		set_province_flag = has_been_colonised

		# populate the province with colonists
		decrease_depopulation_effect = yes
	}
}

add_dwarf_ruins = {
	remove_province_modifier = elf_ruins_1
	remove_province_modifier = elf_ruins_2
	remove_province_modifier = elf_ruins_3
	remove_province_modifier = elf_ruins_4
	remove_province_modifier = elf_ruins_5
	remove_province_modifier = elf_ruins_6
	remove_province_modifier = noldor_ruins_1
	remove_province_modifier = noldor_ruins_2
	remove_province_modifier = noldor_ruins_3
	remove_province_modifier = noldor_ruins_4
	remove_province_modifier = noldor_ruins_5
	remove_province_modifier = noldor_ruins_6
	
	if = {
		limit = { has_province_modifier = dwarf_ruins_5 }

		remove_province_modifier = dwarf_ruins_5
		add_province_modifier = { name = dwarf_ruins_6 duration = -1 }
		}
	if = {
        limit = { has_province_modifier = dwarf_ruins_4 }

        remove_province_modifier = dwarf_ruins_4
        add_province_modifier = { name = dwarf_ruins_5 duration = -1 }
    }
	if = {
        limit = { has_province_modifier = dwarf_ruins_3 }

        remove_province_modifier = dwarf_ruins_3
        add_province_modifier = { name = dwarf_ruins_4 duration = -1 }
    }
	if = {
        limit = { has_province_modifier = dwarf_ruins_2 }

        remove_province_modifier = dwarf_ruins_2
        add_province_modifier = { name = dwarf_ruins_3 duration = -1 }
    }
    if = {
        limit = { has_province_modifier = dwarf_ruins_1 }

        remove_province_modifier = dwarf_ruins_1
        add_province_modifier = { name = dwarf_ruins_2 duration = -1 }
    }

	if = {
        limit = {
			NOT = { has_province_modifier = dwarf_ruins_1 }
			NOT = { has_province_modifier = dwarf_ruins_2 }
			NOT = { has_province_modifier = dwarf_ruins_3 }
			NOT = { has_province_modifier = dwarf_ruins_4 }
			NOT = { has_province_modifier = dwarf_ruins_5 }
			NOT = { has_province_modifier = dwarf_ruins_6 }
		}

        # else, add first ruin
		add_province_modifier = { name = dwarf_ruins_1 duration = -1 }
    }
}

add_noldor_ruins = {
	remove_province_modifier = elf_ruins_1
	remove_province_modifier = elf_ruins_2
	remove_province_modifier = elf_ruins_3
	remove_province_modifier = elf_ruins_4
	remove_province_modifier = elf_ruins_5
	remove_province_modifier = elf_ruins_6
	remove_province_modifier = dwarf_ruins_1
	remove_province_modifier = dwarf_ruins_2
	remove_province_modifier = dwarf_ruins_3
	remove_province_modifier = dwarf_ruins_4
	remove_province_modifier = dwarf_ruins_5
	remove_province_modifier = dwarf_ruins_6
	
	if = {
		limit = { has_province_modifier = noldor_ruins_5 }

		remove_province_modifier = noldor_ruins_5
		add_province_modifier = { name = noldor_ruins_6 duration = -1 }
		}
	if = {
        limit = { has_province_modifier = noldor_ruins_4 }

        remove_province_modifier = noldor_ruins_4
        add_province_modifier = { name = noldor_ruins_5 duration = -1 }
    }
	if = {
        limit = { has_province_modifier = noldor_ruins_3 }

        remove_province_modifier = noldor_ruins_3
        add_province_modifier = { name = noldor_ruins_4 duration = -1 }
    }
	if = {
        limit = { has_province_modifier = noldor_ruins_2 }

        remove_province_modifier = noldor_ruins_2
        add_province_modifier = { name = noldor_ruins_3 duration = -1 }
    }
    if = {
        limit = { has_province_modifier = noldor_ruins_1 }

        remove_province_modifier = noldor_ruins_1
        add_province_modifier = { name = noldor_ruins_2 duration = -1 }
    }

	if = {
        limit = {
			NOT = { has_province_modifier = noldor_ruins_1 }
			NOT = { has_province_modifier = noldor_ruins_2 }
			NOT = { has_province_modifier = noldor_ruins_3 }
			NOT = { has_province_modifier = noldor_ruins_4 }
			NOT = { has_province_modifier = noldor_ruins_5 }
			NOT = { has_province_modifier = noldor_ruins_6 }
		}

        # else, add first ruin
		add_province_modifier = { name = noldor_ruins_1 duration = -1 }
    }
}

add_elf_ruins = {
	remove_province_modifier = noldor_ruins_1
	remove_province_modifier = noldor_ruins_2
	remove_province_modifier = noldor_ruins_3
	remove_province_modifier = noldor_ruins_4
	remove_province_modifier = noldor_ruins_5
	remove_province_modifier = noldor_ruins_6
	remove_province_modifier = dwarf_ruins_1
	remove_province_modifier = dwarf_ruins_2
	remove_province_modifier = dwarf_ruins_3
	remove_province_modifier = dwarf_ruins_4
	remove_province_modifier = dwarf_ruins_5
	remove_province_modifier = dwarf_ruins_6
	
	if = {
		limit = { has_province_modifier = elf_ruins_5 }

		remove_province_modifier = elf_ruins_5
		add_province_modifier = { name = elf_ruins_6 duration = -1 }
		}
	if = {
        limit = { has_province_modifier = elf_ruins_4 }

        remove_province_modifier = elf_ruins_4
        add_province_modifier = { name = elf_ruins_5 duration = -1 }
    }
	if = {
        limit = { has_province_modifier = elf_ruins_3 }

        remove_province_modifier = elf_ruins_3
        add_province_modifier = { name = elf_ruins_4 duration = -1 }
    }
	if = {
        limit = { has_province_modifier = elf_ruins_2 }

        remove_province_modifier = elf_ruins_2
        add_province_modifier = { name = elf_ruins_3 duration = -1 }
    }
    if = {
        limit = { has_province_modifier = elf_ruins_1 }

        remove_province_modifier = elf_ruins_1
        add_province_modifier = { name = elf_ruins_2 duration = -1 }
    }

	if = {
        limit = {
			NOT = { has_province_modifier = elf_ruins_1 }
			NOT = { has_province_modifier = elf_ruins_2 }
			NOT = { has_province_modifier = elf_ruins_3 }
			NOT = { has_province_modifier = elf_ruins_4 }
			NOT = { has_province_modifier = elf_ruins_5 }
			NOT = { has_province_modifier = elf_ruins_6 }
		}

        # else, add first ruin
		add_province_modifier = { name = elf_ruins_1 duration = -1 }
    }
}

# this picks the type of ruins based on the race/culture in THIS province
add_ruins = {
	if = {
		limit = { religion = religion_moriquendi }
		add_elf_ruins = yes
	}
	if = {
		limit = { religion = religion_calaquendi }
		add_noldor_ruins = yes
	}
	if = {
		limit = { culture_group = culture_group_dwarves }
		add_dwarf_ruins = yes
	}
}

# add ruins of the appropriate type and destroys all holdings.  called from province scope
ruin_province = {

	# damage any wonders here
	wonder = {
		set_wonder_damaged = yes
		any_upgrade_on_wonder = {
			destroy_wonder_upgrade = yes
		}
	}

	if = {
		limit = {
			num_of_settlements = 7
		}
		add_ruins = yes
	}
	if = {
		limit = {
			num_of_settlements = 6
		}
		add_ruins = yes
	}
	if = {
		limit = {
			num_of_settlements = 5
		}
		add_ruins = yes
	}
	if = {
		limit = {
			num_of_settlements = 4
		}
		add_ruins = yes
	}
	if = {
		limit = {
			num_of_settlements = 3
		}
		add_ruins = yes
	}
	if = {
		limit = {
			num_of_settlements = 2
		}
		add_ruins = yes
	}
	
	any_province_holding = {
		limit = {
			is_capital = no
		}
		destroy_settlement = THIS
	}
	destroy_fort = THIS
	owner = {
		destroy_hospital = PREV
		destroy_tradepost = PREV
	}
}

make_elf_friend = {
	remove_trait = evil_side
	
	# yes, can be racist and elf_friend (like how thingol is racist but dwarf_friend, to his eventual misfortune)
	add_trait = elf_friend 
	if = {
		limit = {
			is_ruler = yes
		}
		add_trait = good_side
	}
}

clear_mining_expedition_flags = {
	clr_character_flag = targetting_province_for_expedition
	clr_character_flag = good_sponsorship
	clr_character_flag = ruler_expedition_leader
	clr_character_flag = councillor_expedition_leader
	clr_character_flag = sending_mining_expedition
	clr_character_flag = bad_sponsorship
	clr_character_flag = mining_expedition_destroyed
	clr_character_flag = mining_expedition_conquered
	clr_character_flag = mining_expedition_tantrum
	clr_character_flag = mining_expedition_starvation
	clr_character_flag = mining_expedition_neutral
	clr_character_flag = mining_expedition_success
	clr_character_flag = mining_expedition_great_success
	clr_character_flag = no_sponsorship
	event_target:target_expedition_councillor = {
		clr_character_flag = sending_mining_expedition
	}
	event_target:target_mining_target_owner = {
        clr_character_flag = mining_target
    }
	event_target:target_mining_target = {
        clr_province_flag = mining_target
    }
}

settle_with_root_refugees_effect = {
	culture = ROOT
	religion = ROOT
	add_province_modifier = {
		name = settled_by_refugees
		duration = 7300
	}
	populate_effect = yes
}

populate_effect = {
	remove_province_modifier = being_purged
	remove_province_modifier = depopulated_3
	remove_province_modifier = depopulated_2
	remove_province_modifier = depopulated_1
}

build_city_effect = {
	if = {
		limit = {
			num_of_empty_holdings = 1
		}
		build_holding = {
			type = city
		}
	}
}

build_castle_effect = {
	if = {
		limit = {
			num_of_empty_holdings = 1
		}
		build_holding = {
			type = castle
		}
	}
}

build_temple_effect = {
	if = {
		limit = {
			num_of_empty_holdings = 1
		}
		build_holding = {
			type = temple
		}
	}
}

build_tribal_effect = {
	if = {
		limit = {
			num_of_empty_holdings = 1
			NOT = {
				any_province_holding = {
					holding_type = tribal
				}
			}
		}
		build_holding = {
			type = tribal
		}
	}
}

remove_tribal_effect = {
	any_province_holding = {
		limit = {
			holding_type = tribal
		}
		destroy_settlement = THIS
	}
}

abandon_province = {
	if = {
		limit = {
			NOT = { num_of_settlements = 1 }
		}
		build_holding = {
			type = castle
		}
	}
	else_if = {
		limit = {
			num_of_settlements = 2
		}
		ruin_province = yes
	}

	create_character = {
		random_traits = no
		name = "Wilderness"
		religion = religion_wilderness
		culture = culture_wilderness
		dynasty = 19013
		female = no
		age = 4000
		trait = wilderness
		#disallow_random_traits = yes
	}

	county = {
		new_character = {
			usurp_title = PREV
			set_defacto_liege = THIS

			capital_holding = {
				convert_to = CASTLE
			}
			set_government_type = wilderness_nongovernment
		}
		location = {
			culture = culture_wilderness
			religion = religion_wilderness
		}
	}
}

abandon_province_to_liege_or_wilderness = {
	if = {
		limit = {
			NOT = { num_of_settlements = 1 }
		}
		build_holding = {
			type = castle
		}
	}
	else_if = {
		limit = {
			num_of_settlements = 2
		}
		ruin_province = yes
	}

	if = {
		limit = {
			independent = no
		}
		county = {
			top_liege = {
				usurp_title = PREV
			}
		}
	}
	else = {
		abandon_province = yes
	}
}

abandon_province_to_wood_elves = {
	if = {
		limit = {
			NOT = { num_of_settlements = 1 }
		}
		build_holding = {
			type = castle
		}
	}
	else_if = {
		limit = {
			num_of_settlements = 2
		}
		ruin_province = yes
	}

	random_list = {
		10 = {
			create_character = {
				culture = culture_laegrim
				religion = religion_moriquendi
				age = 310
				trait = elf
			}
		}
		10 = {
			create_character = {
				culture = culture_laegrim
				religion = religion_moriquendi
				age = 400
				trait = elf
			}
		}
		10 = {
			create_character = {
				culture = culture_laegrim
				religion = religion_moriquendi
				age = 680
				trait = elf
			}
		}
		10 = {
			create_character = {
				culture = culture_laegrim
				religion = religion_moriquendi
				age = 940
				trait = elf
			}
		}
		10 = {
			create_character = {
				culture = culture_laegrim
				religion = religion_moriquendi
				age = 1420
				trait = elf
			}
		}
		5 = {
			create_character = {
				culture = culture_nandor
				religion = religion_moriquendi
				age = 1050
				trait = elf
			}
		}
		5 = {
			create_character = {
				culture = culture_avari
				religion = religion_moriquendi
				age = 1230
				trait = elf
			}
		}
	}

	county = {
		location = {
			new_character = {
				usurp_title = PREVPREV
				set_defacto_liege = THIS

				capital_holding = {
					convert_to = CASTLE
				}
				set_government_type = feudal_government

				PREV = {
					culture = PREV
					religion = PREV
				}
			}
		}
	}
}

silmarillion_become_heretic_effect = {
	add_trait = evil_side
}

silmarillion_province_become_heretic_effect = {
	add_province_modifier = { # the people here have been corrupted by agents of morgoth!
		modifier = heretic_stronghold
		years = 10
	}
}

slmarillion_sudden_flame_effect = { # ROOT = morgoth
	#change_infamy = {  # this currently gives EVERY character infamy for some damned reason
		#	value = 35
		#	localisation = "Dagor Bragollach"
		#}

	custom_tooltip = {	text = EVTOPTA_dagor_bragollach_14_TIP }

	hidden_tooltip = {

		# TODO - not working
		any_independent_ruler = { # destroy armies of neighboring realms
			limit = { NOT = { religion_group = religion_group_melkor } }
			any_unit = {
				limit = {
					location = {
						OR = {
							de_jure_liege_or_above = d_ard_galen
							de_jure_liege_or_above = k_angband
						}
					}
				}
				damage_unit = {
					percentage = 1.0 # TODO not working?
				}
			}
		}

		any_player = { # notify non-morgoth
			limit = {
				NOT = { character = ROOT }
			}
			character_event = { id = dagor_bragollach.11 }
		}

		18 = { province_event = { id = evilside.4 }	}
		198 = { province_event = { id = evilside.4 } }
		199 = { province_event = { id = evilside.4 } }
		200 = { province_event = { id = evilside.4 } }
		17 = { province_event = { id = evilside.4 } }
		430 = { province_event = { id = evilside.4 } }
		431 = { province_event = { id = evilside.4 } }
	}
}